def result = ''
def PRE_RELEASES = ''

@NonCPS
def loop_of_sh(list) {
    list.each { item ->
        sh(""". ${WORKSPACE}/.venv/bin/activate;
        git checkout $item;
        python setup.py sdist;
        twine upload dist/* --repository-url https://upload.pypi.org/legacy/ -u $USERNAME -p $PASSWORD;
        git tag `echo $item | sed s/-pre//g` $item;
        git push --delete origin $item;
        git tag -d $item;
        git push origin --tags;
        """)
    }
}



pipeline {

    agent any

    stages {

        stage('Wipe') {
            steps {
                script {
                    deleteDir()

                    try {
                        dir('./ioteclabs_wrapper') {
                            deleteDir()
                        }
                    }
                    catch(Exception ex) {
                        echo 'could not delete ./ioteclabs_wrapper'
                    }
                }
            }
        }

        stage('Checkout repos') {
            steps {

                sh('mkdir -p ${WORKSPACE}/ioteclabs_wrapper')
                dir('./ioteclabs_wrapper') {

                    checkout([
                        scm: [
                            $class: 'GitSCM',
                            branches: [[name: 'master']],
                            doGenerateSubmoduleConfigurations: false,
                            userRemoteConfigs: [[
                                credentialsId: 'GitSSHCredentials',
                                url: 'git@github.com:iotgdev/ioteclabs-wrapper.git'
                            ]]
                        ]
                    ])

                }
            }
        }

        stage('Mark Releases') {
            steps {

                withCredentials([usernamePassword(credentialsId: 'PypiCredentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {

                    dir('./ioteclabs_wrapper') {

                        sh("rm -rf ${WORKSPACE}/.venv")
                        sh("virtualenv -p /usr/bin/python2 ${workspace}/.venv")
                        sh(". ${WORKSPACE}/.venv/bin/activate && pip install twine")

                        sshagent (credentials: ['GitSSHCredentials']) {

                            sh("git config user.email 'iotgbuildsupport@iotecglobal.com'")
                            sh("git config user.name 'iotgbuildsupport'")

                            script {
                                PRE_RELEASES = sh(
                                    script: "git tag -l | grep pre | sort --version-sort | head -n -1",
                                    returnStdout: true
                                ).trim().split('\n')
                            }

                            loop_of_sh(PRE_RELEASES)
                        }
                    }
                }
            }
        }
    }
}
